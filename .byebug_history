exit
DataModule::CLICKS.count
continue
DataModule::CLICKS.count
continue
whereami
DataModule::CLICKS.count
DataModule::CLICKS
CLICKS
@clicks
clicks
exit
@clicks
CLICKS
clicks
exit
@clicks
CLICKS
ClickFinder::CLICKS.count
exit
ClickFinder::CLICKS.count
        assert_equal(ClickFinder::CLICKS.last, {:ip=>"22.22.22.22", :timestamp=>"3/11/2016 23:59:59", :amount=>9.0})
exit
CF::CLICKS.count
CF::CLICKS
CF::CLICKS.last
assert_equal(CF::CLICKS.last, {:ip=>"22.22.22.22", :timestamp=>"3/11/2016 23:59:59", :amount=>9.0})
CF::CLICKS.last
exit
assert_not_respond_to(t, "time_of_click")
assert_respond_to(t, "time_of_click")
assert_respond_to(t, :time_of_click)
t = CF.get_time_obj_keys(first_click)
assert_respond_to(CF.get_time_obj_keys(first_click), :time_of_click)
assert_respond_to(CF.get_time_obj_keys(first_click), :time_of_click, DateTime.new)
CF.get_time_obj_keys(first_click)
assert_respond_to(CF.get_time_obj_keys(first_click), "time_of_click", DateTime.new)
assert_respond_to(CF.get_time_obj_keys(first_click), "time_of_click", DateTime)
assert_respond_to(CF.get_time_obj_keys(first_click), "time_of_click")
CF.get_time_obj_keys(first_click = CF::CLICKS.first)
CF.get_time_obj_keys
CF::CLICKS
CF = ClickFinder
cf
cf::CLICKS
cf.CLICKS
cf = ClickFinder.new
exit
@clicks.last
@clicks.count
@clicks
clicks
exit
@clicks.count
exit
clicks.count
exit
clicks.count
clicks
exit
continue
exit
clicks
clicks = DataModule::CLICKS
DataModule::CLICKS
DataModule
exit
ClickFinder.group_clicks_by_ip([{ ip:'22.22.22.22', timestamp:'3/11/2016 02:02:58', amount: 7.00 }])
ClickFinder.group_clicks_by_ip({ ip:'22.22.22.22', timestamp:'3/11/2016 02:02:58', amount: 7.00 })
ClickFinder.group_clicks_by_ip(clicks = [)
ClickFinder.group_clicks_by_ip
ClickFinder::clicks
ClickFinder:clicks
ClickFinder.clicks
ClickFinder
exit
!!!
Data::CLICKS
require_relative './data2'
exit
Data::clicks
Data.clicks
require_relative './data2'
DataModule::CLICKS
require_relative './data'
exit
EXIT
DataModule::CLICKS
DataModule::clicks
require_relative './data'
exit
require_relative './data'
clicks
require_relative './data2'
exit
require_relative './data'
include 'data'
require_relative 'data'
require 'data'
exit
require_relative './data'
require 'data'
require './data'
include data
require_relative 'data'
$LOAD_PATH << '.'
require_relative './data'
require_relative 'data'
include data
include './data'
require './data'
require 'data'
exit
result
exit
!!!
max_value_found
exit
time_range_obj
time_range_obj[start_time_string]
continue
next
exit
time_range_obj
time_range_obj[start_time_string].class 
time_range_obj[start_time_string].class != Array
continue
exit
time_range_obj[start_time_string] == Array
time_range_obj[start_time_string].class 
time_range_obj[start_time_string].class != Object
time_range_obj[start_time_string] != Object
time_range_obj[start_time_string] != Array
time_range_obj[start_time_string]
continue
where
help
